name: Build

on:
    pull_request:
        types: [synchronize, opened, reopened]

concurrency:
    group: build
    cancel-in-progress: true

jobs:
    build-and-publish:
        name: Build and Publish
        runs-on: self-hosted-hoprnet-small

        steps:

            - name: Setup project
              uses: hoprnet/uhttp-crypto/actions/setup@ausias/test-pipelines
              with:
                node-version: 20
                GOOGLE_HOPRASSOCIATION_CREDENTIALS_REGISTRY: ${{ secrets.GOOGLE_HOPRASSOCIATION_CREDENTIALS_REGISTRY }}

            # - name: Checkout repository
            #   uses: actions/checkout@v4

            # - name: Setup Node.js
            #   uses: actions/setup-node@v4
            #   with:
            #       node-version: '20'

            # - name: Install Yarn
            #   run: npm install -g yarn

            # - name: Set up Google Cloud Credentials
            #   id: auth
            #   uses: google-github-actions/auth@v2
            #   with:
            #     credentials_json: ${{ secrets.GOOGLE_HOPRASSOCIATION_CREDENTIALS_REGISTRY }}

            # - name: Login Google Artifact Registry
            #   uses: docker/login-action@v3
            #   with:
            #     registry: europe-west3-docker.pkg.dev
            #     username: oauth2accesstoken
            #     password: ${{ steps.auth.outputs.access_token }}

            # - name: Setup Node.js
            #   uses: actions/setup-node@v4
            #   with:
            #       node-version: '20'
            #       cache: 'yarn'
            #       cache-dependency-path: ./yarn.lock
            #       registry-url: https://europe-west3-npm.pkg.dev/hoprassociation/npm

            - name: Install dependencies
              run: yarn --frozen-lockfile

            - name: Building
              run: yarn build

            - name: Linting
              run: yarn lint:ci

            - name: Formatting
              run: yarn format:ci

            - name: Testing
              run: yarn test

            - name: Update version
              run: |
                  set -x 
                  BUILD_DATE=$(date +%Y%m%d%H%M%S)
                  PR_VERSION=$(node -p "require('./package.json').version")-pr.${{ github.event.pull_request.number }}
                  jq --arg version "${PR_VERSION}-${BUILD_DATE}" '.version = $version' package.json > temp.json
                  mv temp.json package.json
                  grep version package.json

            # - name: Publish to npm
            #   run: yarn publish --tag next
            #   env:
            #       NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
